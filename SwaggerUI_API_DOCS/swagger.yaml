swagger: '2.0'
info:
  description: Trading Management REST API
  version: 1.0.0
  title: Eyetrade
  contact:
    name: Eyetrade
    url: 'http://100.26.202.213:8080'
    email: eyetrade451@gmail.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: '100.26.202.213:8080'
basePath: /
tags:
  - name: Annotations of Article or Events
    description: Annotation Controller
  - name: Articles
    description: Article Controller
  - name: Buy Sell Order Operations
    description: Buy Sell Order Controller
  - name: Comments of Article or Events
    description: Comment Controller
  - name: Currencies
    description: Currency Controller
  - name: Events
    description: Event Controller
  - name: Login
    description: Login Controller
  - name: Main Page
    description: Main Page Controller
  - name: Notifications
    description: Notification Controller
  - name: Password Reset
    description: Reset Password Controller
  - name: Portfolios
    description: Portfolio Controller
  - name: Predictions
    description: Prediction Controller
  - name: Registration
    description: Registration Controller
  - name: Search
    description: Search Controller
  - name: Trading Accounts and Transactions
    description: Transaction Controller
  - name: User Following
    description: User Following Controller
  - name: User Profile
    description: User Profile Controller
paths:
  /annotation/add:
    post:
      tags:
        - Annotations of Article or Events
      summary: Add annotation to an article or event
      operationId: addAnnotationUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - in: body
          name: dto
          description: dto
          required: true
          schema:
            $ref: '#/definitions/AnnotationDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AnnotationResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /annotation/delete:
    delete:
      tags:
        - Annotations of Article or Events
      summary: Delete annotation of user with annotation id and token
      operationId: deleteAnnotationUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: annotationId
          in: query
          description: annotationId
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            type: string
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /annotation/get:
    get:
      tags:
        - Annotations of Article or Events
      summary: Get annotation with annotation id
      operationId: getAnnotationUsingGET
      produces:
        - '*/*'
      parameters:
        - name: annotationId
          in: query
          description: annotationId
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AnnotationResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /annotation/get_annotations_of_article_event:
    get:
      tags:
        - Annotations of Article or Events
      summary: >-
        Get annotations of an article or an event with article event id and
        token
      operationId: getAnnotationsOfArticleEventUsingGET
      produces:
        - '*/*'
      parameters:
        - name: annotationType
          in: query
          description: annotationType
          required: false
          type: string
          enum:
            - Article
            - Event
        - name: articleEventId
          in: query
          description: articleEventId
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AnnotationResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /annotation/get_annotations_of_self:
    get:
      tags:
        - Annotations of Article or Events
      summary: Get annotations of self user with token
      operationId: getAnnotationsOfSelfUsingGET
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AnnotationResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /article/article:
    get:
      tags:
        - Articles
      summary: Get article by id
      operationId: getArticleUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: query
          description: id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ArticleResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /article/articles:
    get:
      tags:
        - Articles
      summary: Get all articles ordered by time
      operationId: getArticlesUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ArticlesResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /article/create:
    post:
      tags:
        - Articles
      summary: Create an article
      operationId: createArticleUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - in: body
          name: articleDto
          description: articleDto
          required: true
          schema:
            $ref: '#/definitions/ArticleDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ArticleResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /article/delete:
    delete:
      tags:
        - Articles
      summary: Delete an article
      operationId: deleteArticleUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: articleID
          in: query
          description: articleID
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ArticleResource'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /article/give_point:
    post:
      tags:
        - Articles
      summary: Give a point to an article
      operationId: givePointUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: articleID
          in: query
          description: articleID
          required: true
          type: string
          format: uuid
        - name: score
          in: query
          description: score
          required: true
          type: number
          format: double
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ArticleResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /article/self_articles:
    get:
      tags:
        - Articles
      summary: Get current users articles ordered by time
      operationId: getSelfArticlesUsingGET
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ArticlesResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /article/self_top_articles:
    get:
      tags:
        - Articles
      summary: Get current users top articles
      operationId: getSelfTopArticlesUsingGET
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ArticlesResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /article/top_articles:
    get:
      tags:
        - Articles
      summary: Get top articles
      operationId: getTopArticlesUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ArticlesResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /article/update:
    post:
      tags:
        - Articles
      summary: Update an article
      operationId: updateArticleUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - in: body
          name: articleDto
          description: articleDto
          required: true
          schema:
            $ref: '#/definitions/ArticleDto'
        - name: articleID
          in: query
          description: articleID
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ArticleResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /article/user_articles:
    get:
      tags:
        - Articles
      summary: Get all articles of a user ordered by time
      operationId: getUserArticlesUsingGET
      produces:
        - '*/*'
      parameters:
        - name: userEmail
          in: query
          description: userEmail
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ArticlesResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /article/user_top_articles:
    get:
      tags:
        - Articles
      summary: Get top articles of a user
      operationId: getUserTopArticlesUsingGET
      produces:
        - '*/*'
      parameters:
        - name: userEmail
          in: query
          description: userEmail
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ArticlesResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /buy_sell_order/add:
    post:
      tags:
        - Buy Sell Order Operations
      summary: |-
        User can add buy or sell order of currency for a specific rate 
            For buying with fund: soldType and soldAmount should be left as null 
           For selling for fund: boughtType and boughtAmount should be left as null 
           For exchange operation: both type should be filled.Rate should use as exchange rate (boughtTypeRate/SoldTypeRate). Amount should use as soldAmount.    For example: For selling 5 dollars and buying 4 euros your exchange rate should include 1.25and your amount should be 5
      operationId: addBuySellOrderUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - in: body
          name: dto
          description: dto
          required: true
          schema:
            $ref: '#/definitions/BuySellOrderDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BuySellOrderResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /buy_sell_order/delete:
    delete:
      tags:
        - Buy Sell Order Operations
      summary: User can delete buy or sell order of currency
      operationId: deleteBuySellOrderUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: buySellOrderId
          in: query
          description: buySellOrderId
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /buy_sell_order/get_all_self:
    get:
      tags:
        - Buy Sell Order Operations
      summary: User can see all buy or sell order of himself/herself
      operationId: getAllBuySellOrderUsingGET
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BuySellOrderResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /buy_sell_order/update:
    put:
      tags:
        - Buy Sell Order Operations
      summary: User can update buy or sell order of currency for a specific rate
      operationId: updateBuySellOrderUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: buySellOrderId
          in: query
          description: buySellOrderId
          required: true
          type: string
          format: uuid
        - in: body
          name: dto
          description: dto
          required: true
          schema:
            $ref: '#/definitions/BuySellOrderDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BuySellOrderResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /buy_transaction:
    post:
      tags:
        - Trading Accounts and Transactions
      summary: A user can buy fund with dto.
      operationId: buyFundUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - in: body
          name: dto
          description: dto
          required: true
          schema:
            $ref: '#/definitions/BuyTransactionDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BuyTransactionResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /comment_controller/delete_comment:
    delete:
      tags:
        - Comments of Article or Events
      summary: A user can delete his/her your own comment with comment id and token.
      operationId: deleteCommentUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: articleOrEventId
          in: query
          description: articleOrEventId
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            type: string
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /comment_controller/get_comment:
    get:
      tags:
        - Comments of Article or Events
      summary: A user can access a comment on event or article with Comment ID.
      operationId: getCommentUsingGET
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: commentId
          in: query
          description: commentId
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CommentResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /comment_controller/get_comments_of_article:
    get:
      tags:
        - Comments of Article or Events
      summary: >-
        A user can access all comments about an event or an article with Event
        or Article Id.
      operationId: getCommentsOfArticleOrEventUsingGET
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: articleOrEventId
          in: query
          description: articleOrEventId
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/CommentResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /comment_controller/get_comments_of_user:
    get:
      tags:
        - Comments of Article or Events
      summary: A user can access all comments about of himself/herself.
      operationId: getCommentsOfUserUsingGET
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/CommentResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /comment_controller/post_comment:
    post:
      tags:
        - Comments of Article or Events
      summary: A user can comment on event or article with necessary informations.
      operationId: postCommentUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - in: body
          name: dto
          description: dto
          required: true
          schema:
            $ref: '#/definitions/CommentDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CommentResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /comment_controller/update_comment:
    put:
      tags:
        - Comments of Article or Events
      summary: >-
        A user can change content of his/her your own comment with commentDto,
        comment id and token.
      operationId: updateCommentUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: articleOrEventId
          in: query
          description: articleOrEventId
          required: true
          type: string
          format: uuid
        - name: newContent
          in: query
          description: newContent
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CommentResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /confirmation/reset_password:
    get:
      tags:
        - Password Reset
      summary: Reset the user's password by using the link in the confirmation mail
      operationId: resetPasswordUsingGET
      produces:
        - '*/*'
      parameters:
        - name: password
          in: query
          description: password
          required: true
          type: string
        - name: token
          in: query
          description: token
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /confirmation/send_token:
    get:
      tags:
        - Password Reset
      summary: Send a reset token to the email of the user
      operationId: resetPasswordUsingGET_1
      produces:
        - '*/*'
      parameters:
        - name: email
          in: query
          description: email
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /create_trading_account:
    get:
      tags:
        - Trading Accounts and Transactions
      summary: A trader user can create trading account.
      operationId: createTradingAccountUsingGET
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserAccountResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /currency/convert:
    get:
      tags:
        - Currencies
      summary: >-
        Takes the source currency, target currency, amount of source currency;
        then converts the currency amount
      operationId: convertCurrencyUsingGET
      produces:
        - '*/*'
      parameters:
        - name: amount
          in: query
          required: false
          type: number
          format: double
        - name: inputCurrencyType
          in: query
          required: false
          type: string
          enum:
            - USD
            - TRY
            - EUR
            - GBP
            - JPY
            - CNY
            - BTC
            - ETH
            - XRP
            - LTC
            - XMR
        - name: outputCurrencyType
          in: query
          required: false
          type: string
          enum:
            - USD
            - TRY
            - EUR
            - GBP
            - JPY
            - CNY
            - BTC
            - ETH
            - XRP
            - LTC
            - XMR
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CurrencyConverterResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /currency/take-rates-between-dates:
    get:
      tags:
        - Currencies
      summary: >-
        Takes the currency rates between two dates, target currency, amount of
        source currency; then it returns the list of exchange rate and amounts
      operationId: convertCurrencyUsingGET_1
      produces:
        - '*/*'
      parameters:
        - name: amount
          in: query
          required: false
          type: number
          format: float
        - name: endDate
          in: query
          required: false
          type: string
        - name: sourceCurrencyType
          in: query
          required: false
          type: string
          enum:
            - USD
            - TRY
            - EUR
            - GBP
            - JPY
            - CNY
            - BTC
            - ETH
            - XRP
            - LTC
            - XMR
        - name: startDate
          in: query
          required: false
          type: string
        - name: targetCurrencyType
          in: query
          required: false
          type: string
          enum:
            - USD
            - TRY
            - EUR
            - GBP
            - JPY
            - CNY
            - BTC
            - ETH
            - XRP
            - LTC
            - XMR
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CurrencyIntervalResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /currency/take-rates-last-days:
    get:
      tags:
        - Currencies
      summary: >-
        Takes the currency rates last X days, with target currency, amount of
        source currency; then it returns the list of exchange rate and amounts
      operationId: convertCurrencyUsingGET_2
      produces:
        - '*/*'
      parameters:
        - name: amount
          in: query
          required: false
          type: number
          format: float
        - name: lastDays
          in: query
          required: false
          type: integer
          format: int32
        - name: sourceCurrencyType
          in: query
          required: false
          type: string
          enum:
            - USD
            - TRY
            - EUR
            - GBP
            - JPY
            - CNY
            - BTC
            - ETH
            - XRP
            - LTC
            - XMR
        - name: targetCurrencyType
          in: query
          required: false
          type: string
          enum:
            - USD
            - TRY
            - EUR
            - GBP
            - JPY
            - CNY
            - BTC
            - ETH
            - XRP
            - LTC
            - XMR
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CurrencyLastDaysResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /currency/update-currency-rates:
    get:
      tags:
        - Currencies
      summary: >-
        Updates the currency rates, and saves to DB and returns the last record.
        It is only for us not for customers 
      operationId: updateRecordUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CurrencyRecordResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /event/get_an_event:
    get:
      tags:
        - Events
      summary: Rss element description
      operationId: getEventUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: query
          description: id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EventResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /event/get_events:
    get:
      tags:
        - Events
      summary: Get events order by time
      operationId: getEventsUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /event/give_point:
    post:
      tags:
        - Events
      summary: Give point to an event over 5
      operationId: givePointUsingPOST_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: id
          in: query
          description: id
          required: true
          type: string
          format: uuid
        - name: score
          in: query
          description: score
          required: true
          type: number
          format: double
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EventResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /event/update_events:
    get:
      tags:
        - Events
      summary: Update events bu using a rss source
      operationId: updateEventsUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/EventRssFeed'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /exchange_transaction:
    post:
      tags:
        - Trading Accounts and Transactions
      summary: A user can buy fund with dto.
      operationId: exchangeFundsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - in: body
          name: dto
          description: dto
          required: true
          schema:
            $ref: '#/definitions/ExchangeTransactionDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ExchangeTransactionResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /get_trading_account:
    get:
      tags:
        - Trading Accounts and Transactions
      summary: A trader user can access his/her trading account.
      operationId: getTradingAccountUsingGET
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserAccountResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /login:
    post:
      tags:
        - Login
      summary: Login with the username (email) and password
      operationId: loginUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: loginDto
          description: loginDto
          required: true
          schema:
            $ref: '#/definitions/LoginDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/LoginResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /main_page/get_feed:
    get:
      tags:
        - Main Page
      summary: Get the main page feed
      operationId: getMainPageFeedUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MainPageResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /notification/delete_notification:
    delete:
      tags:
        - Notifications
      summary: >-
        Delete a notification by giving it's id. However, the notification must
        belong to the user
      operationId: deleteNotificationUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: notification_id
          in: header
          description: notification_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            type: string
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /notification/delete_self_notifications:
    delete:
      tags:
        - Notifications
      summary: Delete all the notifications belong to the user
      operationId: deleteAllSelfNotificationsUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /notification/mark_notification:
    put:
      tags:
        - Notifications
      summary: >-
        Mark a notification as seen by giving it's id. However, the notification
        must belong to the user
      operationId: setNotificationAsSeenUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: notification_id
          in: header
          description: notification_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /notification/mark_self_notifications:
    put:
      tags:
        - Notifications
      summary: Mark all the notifications as seen which belong to the user
      operationId: setAllSelfNotificationAsSeenUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /notification/self_notifications:
    get:
      tags:
        - Notifications
      summary: Get current user's notifications
      operationId: getAllSelfNotificationsUsingGET
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/NotificationResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /portfolio/add_currency_pair_to_portfolio:
    post:
      tags:
        - Portfolios
      summary: Add currency pair to a portfolio
      operationId: addCurrencyPairUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: FirstCurrencyType
          in: header
          description: FirstCurrencyType
          required: true
          type: string
          enum:
            - USD
            - TRY
            - EUR
            - GBP
            - JPY
            - CNY
            - BTC
            - ETH
            - XRP
            - LTC
            - XMR
        - name: SecondCurrencyType
          in: header
          description: SecondCurrencyType
          required: true
          type: string
          enum:
            - USD
            - TRY
            - EUR
            - GBP
            - JPY
            - CNY
            - BTC
            - ETH
            - XRP
            - LTC
            - XMR
        - name: portfolioID
          in: query
          description: portfolioID
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /portfolio/create:
    post:
      tags:
        - Portfolios
      summary: Create a portfolio
      operationId: createPortfolioUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: portfolioName
          in: query
          description: portfolioName
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /portfolio/delete:
    delete:
      tags:
        - Portfolios
      summary: Delete a portfolio
      operationId: deletePortfolioUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: portfolioId
          in: query
          description: portfolioId
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioResource'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /portfolio/get_self_portfolios:
    get:
      tags:
        - Portfolios
      summary: Get current user's portfolios
      operationId: getPortfoliosUsingGET
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfoliosResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /portfolio/remove_currency_pair_from_portfolio:
    delete:
      tags:
        - Portfolios
      summary: Remove currency from a portfolio
      operationId: removeCurrencyPairUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: FirstCurrencyType
          in: header
          description: FirstCurrencyType
          required: true
          type: string
          enum:
            - USD
            - TRY
            - EUR
            - GBP
            - JPY
            - CNY
            - BTC
            - ETH
            - XRP
            - LTC
            - XMR
        - name: SecondCurrencyType
          in: header
          description: SecondCurrencyType
          required: true
          type: string
          enum:
            - USD
            - TRY
            - EUR
            - GBP
            - JPY
            - CNY
            - BTC
            - ETH
            - XRP
            - LTC
            - XMR
        - name: portfolioID
          in: query
          description: portfolioID
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioResource'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /prediction/create:
    post:
      tags:
        - Predictions
      summary: Create a prediction
      operationId: createPredictionUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - in: body
          name: dto
          description: dto
          required: true
          schema:
            $ref: '#/definitions/PredictionDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PredictionResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /prediction/delete:
    delete:
      tags:
        - Predictions
      summary: Delete a prediction
      operationId: deletePredictionUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: predictionId
          in: header
          description: predictionId
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            type: string
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /prediction/get_self_predictions:
    get:
      tags:
        - Predictions
      summary: Get all of the predictions of self
      operationId: getSelfPredictionsUsingGET
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PredictionsResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /prediction/get_user_predictions:
    get:
      tags:
        - Predictions
      summary: Get all of the predictions of another user
      operationId: getAnotherUserPredictionsUsingGET
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: otherUserEmail
          in: header
          description: otherUserEmail
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PredictionsResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /registration/basic_register:
    post:
      tags:
        - Registration
      summary: Register a basic user with the needed information
      operationId: registerBasicUserUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: basicUserDto
          description: basicUserDto
          required: true
          schema:
            $ref: '#/definitions/BasicUserDto'
        - name: password
          in: header
          description: password
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CompleteUserResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /registration/confirm_register:
    get:
      tags:
        - Registration
      summary: >-
        Confirm a registration by using the link from the user's confirmation
        mail
      operationId: confirmRegisterUsingGET
      produces:
        - '*/*'
      parameters:
        - name: token
          in: query
          description: token
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /registration/trader_register:
    post:
      tags:
        - Registration
      summary: Register a trader user with the needed information
      operationId: registerTraderUserUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: password
          in: header
          description: password
          required: true
          type: string
        - in: body
          name: traderRegisterDto
          description: traderRegisterDto
          required: true
          schema:
            $ref: '#/definitions/TraderUserDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CompleteUserResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /search/advanced/article:
    get:
      tags:
        - Search
      summary: >-
        Search articles with the wanted informations. Search will be this
        format:
         /search/article?search=(authorName:'Emir' AND authorSurname:'*emir*') OR authorEmail:'anka@test.com' 
        if there is no parameter then result will return all articles
      operationId: searchForArticlesUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ArticleResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /search/advanced/user:
    get:
      tags:
        - Search
      summary: |-
        Search users with the wanted informations. Search will be this format:
         /search/user?search=name:'Emir' AND city:'Erzurum' 
          if there is no parameter then result will return all users The equal operation, using the : operator
          The not equal operation, using the ! operator
            The greater than and less than operators, respectively > and <
           The starts with/ends with/contains operator, using *. It acts like the bash * expension.
           The AND operator.
            The OR operator.
         Parenthesis can be used for grouping.
      operationId: searchForUsersUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MinimalUserResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  '/search/basic/{searching_word}':
    get:
      tags:
        - Search
      summary: 'Search articles,events and users with a String.'
      operationId: searchWithWordUsingGET
      produces:
        - '*/*'
      parameters:
        - name: searching_word
          in: path
          description: searching_word
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BasicSearchResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /sell_transaction:
    post:
      tags:
        - Trading Accounts and Transactions
      summary: A user can sell fund with dto.
      operationId: sellFundUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - in: body
          name: dto
          description: dto
          required: true
          schema:
            $ref: '#/definitions/SellTransactionDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SellTransactionResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /update_orders:
    get:
      tags:
        - Trading Accounts and Transactions
      summary: >-
        Update buy sell orders method. It is created for only testing for
        development progress.
      operationId: updateOrdersUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /user_following/follow:
    post:
      tags:
        - User Following
      summary: A user's request to follow another user
      operationId: followUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: followingUserEmail
          in: header
          description: followingUserEmail
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MinimalUserResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /user_following/get_followers:
    get:
      tags:
        - User Following
      summary: >-
        Get a user's followers. If an email is given we look for email owner's
        followers, otherwise we look for the request sender's followers
      operationId: getFollowersUsingGET
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: otherUserEmail
          in: header
          description: otherUserEmail
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MinimalUserResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /user_following/get_followings:
    get:
      tags:
        - User Following
      summary: >-
        Get a user's followings. If an email is given we look for email owner's
        followings, otherwise we look for the request sender's followings
      operationId: getFollowingsUsingGET
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: otherUserEmail
          in: header
          description: otherUserEmail
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/MinimalUserResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /user_following/unfollow:
    delete:
      tags:
        - User Following
      summary: A user's request to unfollow another user
      operationId: unfollowUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: followingUserEmail
          in: header
          description: followingUserEmail
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/MinimalUserResource'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      deprecated: false
  /user_profile/other_profile:
    get:
      tags:
        - User Profile
      summary: >-
        Return profile of a given user. If the user is private and you don't
        follow it then returns null
      operationId: getOtherProfileUsingGET
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: email
          in: header
          description: email
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CompleteUserResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /user_profile/self_profile:
    get:
      tags:
        - User Profile
      summary: Return current users profile information
      operationId: getSelfProfileUsingGET
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CompleteUserResource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /user_profile/update_basic_profile:
    post:
      tags:
        - User Profile
      summary: Updates a basic profile with the given info
      operationId: updateBasicUserProfileUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - in: body
          name: basicUserDto
          description: basicUserDto
          required: true
          schema:
            $ref: '#/definitions/BasicUserDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CompleteUserResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /user_profile/update_privacy:
    post:
      tags:
        - User Profile
      summary: Updates a user's profile privacy
      operationId: updateUserPrivacyUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: privacy
          in: header
          description: privacy
          required: true
          type: string
          enum:
            - PRIVATE_USER
            - PUBLIC_USER
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CompleteUserResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /user_profile/update_trader_profile:
    post:
      tags:
        - User Profile
      summary: Updates a trader profile with the given info
      operationId: updateTraderUserProfileUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - in: body
          name: traderUserDto
          description: traderUserDto
          required: true
          schema:
            $ref: '#/definitions/TraderUserDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CompleteUserResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /user_profile/upgrade_basic_to_trader:
    post:
      tags:
        - User Profile
      summary: Upgrades a basic user to trader user
      operationId: upgradeBasicToTraderUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - in: body
          name: basicToTraderDto
          description: basicToTraderDto
          required: true
          schema:
            $ref: '#/definitions/BasicToTraderDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CompleteUserResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
definitions:
  AnnotationDto:
    type: object
    properties:
      articleEventId:
        type: string
        format: uuid
      commentType:
        type: string
        enum:
          - Article
          - Event
      content:
        type: string
      firstChar:
        type: integer
        format: int32
      lastChar:
        type: integer
        format: int32
    title: AnnotationDto
  AnnotationResource:
    type: object
    properties:
      articleEventId:
        type: string
        format: uuid
      commentType:
        type: string
        enum:
          - Article
          - Event
      content:
        type: string
      firstChar:
        type: integer
        format: int32
      id:
        type: string
        format: uuid
      lastChar:
        type: integer
        format: int32
      user:
        $ref: '#/definitions/MinimalUserResource'
    title: AnnotationResource
  ArticleDto:
    type: object
    properties:
      content:
        type: string
      contentAbstract:
        type: string
      title:
        type: string
    title: ArticleDto
  ArticleResource:
    type: object
    properties:
      authorEmail:
        type: string
      authorName:
        type: string
      authorSurname:
        type: string
      changeDate:
        type: string
      content:
        type: string
      contentAbstract:
        type: string
      score:
        type: number
        format: double
      stringDate:
        type: string
      title:
        type: string
      uuid:
        type: string
        format: uuid
    title: ArticleResource
  ArticlesResource:
    type: object
    properties:
      articles:
        type: array
        items:
          $ref: '#/definitions/ArticleResource'
    title: ArticlesResource
  BasicSearchResource:
    type: object
    properties:
      articleResources:
        type: array
        items:
          $ref: '#/definitions/ArticleResource'
      eventResources:
        type: array
        items:
          $ref: '#/definitions/EventResource'
      minimalUserResources:
        type: array
        items:
          $ref: '#/definitions/MinimalUserResource'
    title: BasicSearchResource
  BasicToTraderDto:
    type: object
    properties:
      iban:
        type: string
      identityNo:
        type: string
    title: BasicToTraderDto
  BasicUserDto:
    type: object
    properties:
      city:
        type: string
      country:
        type: string
      email:
        type: string
      locationX:
        type: number
        format: double
      locationY:
        type: number
        format: double
      name:
        type: string
      phone:
        type: string
      surname:
        type: string
    title: BasicUserDto
  BuySellOrderDto:
    type: object
    properties:
      boughtAmount:
        type: number
        format: double
      boughtType:
        type: string
        enum:
          - USD
          - TRY
          - EUR
          - GBP
          - JPY
          - CNY
          - BTC
          - ETH
          - XRP
          - LTC
          - XMR
      maxRate:
        type: number
        format: double
      minRate:
        type: number
        format: double
      soldAmount:
        type: number
        format: double
      soldType:
        type: string
        enum:
          - USD
          - TRY
          - EUR
          - GBP
          - JPY
          - CNY
          - BTC
          - ETH
          - XRP
          - LTC
          - XMR
    title: BuySellOrderDto
  BuySellOrderResource:
    type: object
    properties:
      boughtAmount:
        type: number
        format: double
      boughtType:
        type: string
        enum:
          - USD
          - TRY
          - EUR
          - GBP
          - JPY
          - CNY
          - BTC
          - ETH
          - XRP
          - LTC
          - XMR
      id:
        type: string
        format: uuid
      isCompleted:
        type: boolean
      maxRate:
        type: number
        format: double
      minRate:
        type: number
        format: double
      soldAmount:
        type: number
        format: double
      soldType:
        type: string
        enum:
          - USD
          - TRY
          - EUR
          - GBP
          - JPY
          - CNY
          - BTC
          - ETH
          - XRP
          - LTC
          - XMR
      user:
        $ref: '#/definitions/MinimalUserResource'
    title: BuySellOrderResource
  BuyTransactionDto:
    type: object
    properties:
      amount:
        type: number
        format: double
      boughtTypeCurrency:
        type: string
        enum:
          - USD
          - TRY
          - EUR
          - GBP
          - JPY
          - CNY
          - BTC
          - ETH
          - XRP
          - LTC
          - XMR
      creditCardNumber:
        type: string
      cvv:
        type: string
      expiredDate:
        type: string
    title: BuyTransactionDto
  BuyTransactionResource:
    type: object
    properties:
      boughtTypeCurrency:
        type: string
        enum:
          - USD
          - TRY
          - EUR
          - GBP
          - JPY
          - CNY
          - BTC
          - ETH
          - XRP
          - LTC
          - XMR
      boughtTypeInitialAmount:
        type: number
        format: double
      boughtTypeLastAmount:
        type: number
        format: double
      isSuccessful:
        type: boolean
    title: BuyTransactionResource
  CommentDto:
    type: object
    properties:
      articleEventId:
        type: string
        format: uuid
      commentType:
        type: string
        enum:
          - Article
          - Event
      content:
        type: string
    title: CommentDto
  CommentResource:
    type: object
    properties:
      articleEventId:
        type: string
        format: uuid
      commentType:
        type: string
        enum:
          - Article
          - Event
      content:
        type: string
      createdDate:
        type: string
      id:
        type: string
        format: uuid
      minimalUserResource:
        $ref: '#/definitions/MinimalUserResource'
    title: CommentResource
  CompleteUserResource:
    type: object
    properties:
      city:
        type: string
      country:
        type: string
      email:
        type: string
      followerCount:
        type: integer
        format: int64
      followingCount:
        type: integer
        format: int64
      iban:
        type: string
      id:
        type: string
        format: uuid
      identityNo:
        type: string
      locationX:
        type: number
        format: double
      locationY:
        type: number
        format: double
      name:
        type: string
      phone:
        type: string
      predictionCount:
        $ref: '#/definitions/PredictionCountResource'
      privacyType:
        type: string
        enum:
          - PRIVATE_USER
          - PUBLIC_USER
      role:
        type: string
        enum:
          - BASIC_USER
          - TRADER_USER
      surname:
        type: string
    title: CompleteUserResource
  CurrencyConverterResource:
    type: object
    properties:
      amount:
        type: number
        format: double
      date:
        type: string
      inputCurrencyType:
        type: string
        enum:
          - USD
          - TRY
          - EUR
          - GBP
          - JPY
          - CNY
          - BTC
          - ETH
          - XRP
          - LTC
          - XMR
      outputCurrencyType:
        type: string
        enum:
          - USD
          - TRY
          - EUR
          - GBP
          - JPY
          - CNY
          - BTC
          - ETH
          - XRP
          - LTC
          - XMR
      rate:
        type: number
        format: double
    title: CurrencyConverterResource
  CurrencyIntervalResource:
    type: object
    properties:
      currencyConverterResources:
        type: array
        items:
          $ref: '#/definitions/CurrencyConverterResource'
      endDate:
        type: string
      startDate:
        type: string
    title: CurrencyIntervalResource
  CurrencyLastDaysResource:
    type: object
    properties:
      currencyConverterResources:
        type: array
        items:
          $ref: '#/definitions/CurrencyConverterResource'
      dayAmount:
        type: integer
        format: int32
      startDate:
        type: string
    title: CurrencyLastDaysResource
  CurrencyRecordResource:
    type: object
    properties:
      bitcoin:
        type: number
        format: double
      chinaRate:
        type: number
        format: double
      date:
        type: string
      dollarRate:
        type: number
        format: double
      ethereum:
        type: number
        format: double
      euroRate:
        type: number
        format: double
      japanRate:
        type: number
        format: double
      litecoin:
        type: number
        format: double
      monero:
        type: number
        format: double
      ripple:
        type: number
        format: double
      sterlingRate:
        type: number
        format: double
      turkishLiraRate:
        type: number
        format: double
    title: CurrencyRecordResource
  EventResource:
    type: object
    properties:
      content:
        type: string
      guid:
        type: string
        format: uuid
      link:
        type: string
      score:
        type: number
        format: double
      stringDate:
        type: string
      title:
        type: string
    title: EventResource
  EventRssFeed:
    type: object
    properties:
      additionDate:
        type: string
        format: date-time
      description:
        type: string
      id:
        type: string
        format: uuid
      link:
        type: string
      title:
        type: string
    title: EventRssFeed
  EventsResource:
    type: object
    properties:
      instances:
        type: array
        items:
          $ref: '#/definitions/EventResource'
    title: EventsResource
  ExchangeTransactionDto:
    type: object
    properties:
      amountOfSold:
        type: number
        format: double
      boughtTypeCurrency:
        type: string
        enum:
          - USD
          - TRY
          - EUR
          - GBP
          - JPY
          - CNY
          - BTC
          - ETH
          - XRP
          - LTC
          - XMR
      soldTypeCurrency:
        type: string
        enum:
          - USD
          - TRY
          - EUR
          - GBP
          - JPY
          - CNY
          - BTC
          - ETH
          - XRP
          - LTC
          - XMR
    title: ExchangeTransactionDto
  ExchangeTransactionResource:
    type: object
    properties:
      boughtTypeCurrency:
        type: string
        enum:
          - USD
          - TRY
          - EUR
          - GBP
          - JPY
          - CNY
          - BTC
          - ETH
          - XRP
          - LTC
          - XMR
      boughtTypeInitialAmount:
        type: number
        format: double
      boughtTypeLastAmount:
        type: number
        format: double
      isSuccessful:
        type: boolean
      rate:
        type: number
        format: double
      soldTypeCurrency:
        type: string
        enum:
          - USD
          - TRY
          - EUR
          - GBP
          - JPY
          - CNY
          - BTC
          - ETH
          - XRP
          - LTC
          - XMR
      soldTypeInitialAmount:
        type: number
        format: double
      soldTypeLastAmount:
        type: number
        format: double
    title: ExchangeTransactionResource
  LoginDto:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
    title: LoginDto
  LoginResource:
    type: object
    properties:
      token:
        type: string
      userId:
        type: string
        format: uuid
    title: LoginResource
  MainPageResource:
    type: object
    properties:
      suggestedArticles:
        type: array
        items:
          $ref: '#/definitions/ArticleResource'
      suggestedEvents:
        type: array
        items:
          $ref: '#/definitions/EventResource'
      suggestedUsers:
        type: array
        items:
          $ref: '#/definitions/MinimalUserResource'
    title: MainPageResource
  MinimalUserResource:
    type: object
    properties:
      email:
        type: string
      id:
        type: string
        format: uuid
      name:
        type: string
      surname:
        type: string
    title: MinimalUserResource
  NotificationResource:
    type: object
    properties:
      followerEmail:
        type: string
      followerName:
        type: string
      followerSurname:
        type: string
      id:
        type: string
        format: uuid
      notificationDate:
        type: string
        format: date-time
      seen:
        type: boolean
    title: NotificationResource
  PortfolioCurrencyPair:
    type: object
    properties:
      baseType:
        type: string
        enum:
          - USD
          - TRY
          - EUR
          - GBP
          - JPY
          - CNY
          - BTC
          - ETH
          - XRP
          - LTC
          - XMR
      rate:
        type: number
        format: double
      targetType:
        type: string
        enum:
          - USD
          - TRY
          - EUR
          - GBP
          - JPY
          - CNY
          - BTC
          - ETH
          - XRP
          - LTC
          - XMR
    title: PortfolioCurrencyPair
  PortfolioResource:
    type: object
    properties:
      currencyPairs:
        type: array
        items:
          $ref: '#/definitions/PortfolioCurrencyPair'
      id:
        type: string
        format: uuid
      name:
        type: string
      ownerId:
        type: string
        format: uuid
    title: PortfolioResource
  PortfoliosResource:
    type: object
    properties:
      portfolios:
        type: array
        items:
          $ref: '#/definitions/PortfolioResource'
    title: PortfoliosResource
  PredictionCountResource:
    type: object
    properties:
      failCount:
        type: integer
        format: int64
      futureCount:
        type: integer
        format: int64
      successCount:
        type: integer
        format: int64
      totalCount:
        type: integer
        format: int64
    title: PredictionCountResource
  PredictionDto:
    type: object
    properties:
      dividendCurrencyType:
        type: string
        enum:
          - USD
          - TRY
          - EUR
          - GBP
          - JPY
          - CNY
          - BTC
          - ETH
          - XRP
          - LTC
          - XMR
      divisorCurrencyType:
        type: string
        enum:
          - USD
          - TRY
          - EUR
          - GBP
          - JPY
          - CNY
          - BTC
          - ETH
          - XRP
          - LTC
          - XMR
      lowerBoundOfPredictedRate:
        type: number
        format: double
      targetDayForPrediction:
        type: string
      upperBoundOfPredictedRate:
        type: number
        format: double
    title: PredictionDto
  PredictionResource:
    type: object
    properties:
      dividendCurrencyType:
        type: string
        enum:
          - USD
          - TRY
          - EUR
          - GBP
          - JPY
          - CNY
          - BTC
          - ETH
          - XRP
          - LTC
          - XMR
      divisorCurrencyType:
        type: string
        enum:
          - USD
          - TRY
          - EUR
          - GBP
          - JPY
          - CNY
          - BTC
          - ETH
          - XRP
          - LTC
          - XMR
      id:
        type: string
        format: uuid
      lowerBoundOfPredictedRate:
        type: number
        format: double
      predictionDate:
        type: string
      predictionStatus:
        type: string
        enum:
          - success
          - failed
          - future
      targetDayForPrediction:
        type: string
      upperBoundOfPredictedRate:
        type: number
        format: double
    title: PredictionResource
  PredictionsResource:
    type: object
    properties:
      failedPredictions:
        type: array
        items:
          $ref: '#/definitions/PredictionResource'
      futurePredictions:
        type: array
        items:
          $ref: '#/definitions/PredictionResource'
      successfulPredictions:
        type: array
        items:
          $ref: '#/definitions/PredictionResource'
    title: PredictionsResource
  ResponseEntity:
    type: object
    properties:
      body:
        type: object
      statusCode:
        type: string
        enum:
          - 100 CONTINUE
          - 101 SWITCHING_PROTOCOLS
          - 102 PROCESSING
          - 103 CHECKPOINT
          - 200 OK
          - 201 CREATED
          - 202 ACCEPTED
          - 203 NON_AUTHORITATIVE_INFORMATION
          - 204 NO_CONTENT
          - 205 RESET_CONTENT
          - 206 PARTIAL_CONTENT
          - 207 MULTI_STATUS
          - 208 ALREADY_REPORTED
          - 226 IM_USED
          - 300 MULTIPLE_CHOICES
          - 301 MOVED_PERMANENTLY
          - 302 FOUND
          - 302 MOVED_TEMPORARILY
          - 303 SEE_OTHER
          - 304 NOT_MODIFIED
          - 305 USE_PROXY
          - 307 TEMPORARY_REDIRECT
          - 308 PERMANENT_REDIRECT
          - 400 BAD_REQUEST
          - 401 UNAUTHORIZED
          - 402 PAYMENT_REQUIRED
          - 403 FORBIDDEN
          - 404 NOT_FOUND
          - 405 METHOD_NOT_ALLOWED
          - 406 NOT_ACCEPTABLE
          - 407 PROXY_AUTHENTICATION_REQUIRED
          - 408 REQUEST_TIMEOUT
          - 409 CONFLICT
          - 410 GONE
          - 411 LENGTH_REQUIRED
          - 412 PRECONDITION_FAILED
          - 413 PAYLOAD_TOO_LARGE
          - 413 REQUEST_ENTITY_TOO_LARGE
          - 414 URI_TOO_LONG
          - 414 REQUEST_URI_TOO_LONG
          - 415 UNSUPPORTED_MEDIA_TYPE
          - 416 REQUESTED_RANGE_NOT_SATISFIABLE
          - 417 EXPECTATION_FAILED
          - 418 I_AM_A_TEAPOT
          - 419 INSUFFICIENT_SPACE_ON_RESOURCE
          - 420 METHOD_FAILURE
          - 421 DESTINATION_LOCKED
          - 422 UNPROCESSABLE_ENTITY
          - 423 LOCKED
          - 424 FAILED_DEPENDENCY
          - 426 UPGRADE_REQUIRED
          - 428 PRECONDITION_REQUIRED
          - 429 TOO_MANY_REQUESTS
          - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
          - 451 UNAVAILABLE_FOR_LEGAL_REASONS
          - 500 INTERNAL_SERVER_ERROR
          - 501 NOT_IMPLEMENTED
          - 502 BAD_GATEWAY
          - 503 SERVICE_UNAVAILABLE
          - 504 GATEWAY_TIMEOUT
          - 505 HTTP_VERSION_NOT_SUPPORTED
          - 506 VARIANT_ALSO_NEGOTIATES
          - 507 INSUFFICIENT_STORAGE
          - 508 LOOP_DETECTED
          - 509 BANDWIDTH_LIMIT_EXCEEDED
          - 510 NOT_EXTENDED
          - 511 NETWORK_AUTHENTICATION_REQUIRED
      statusCodeValue:
        type: integer
        format: int32
    title: ResponseEntity
  SellTransactionDto:
    type: object
    properties:
      amount:
        type: number
        format: double
      soldTypeCurrency:
        type: string
        enum:
          - USD
          - TRY
          - EUR
          - GBP
          - JPY
          - CNY
          - BTC
          - ETH
          - XRP
          - LTC
          - XMR
    title: SellTransactionDto
  SellTransactionResource:
    type: object
    properties:
      isSuccessful:
        type: boolean
      soldTypeCurrency:
        type: string
        enum:
          - USD
          - TRY
          - EUR
          - GBP
          - JPY
          - CNY
          - BTC
          - ETH
          - XRP
          - LTC
          - XMR
      soldTypeInitialAmount:
        type: number
        format: double
      soldTypeLastAmount:
        type: number
        format: double
    title: SellTransactionResource
  TraderUserDto:
    type: object
    properties:
      city:
        type: string
      country:
        type: string
      email:
        type: string
      iban:
        type: string
      identityNo:
        type: string
      locationX:
        type: number
        format: double
      locationY:
        type: number
        format: double
      name:
        type: string
      phone:
        type: string
      surname:
        type: string
    title: TraderUserDto
  UserAccountResource:
    type: object
    properties:
      bitcoinAmount:
        type: number
        format: double
      cnyAmount:
        type: number
        format: double
      ethereumAmount:
        type: number
        format: double
      eurAmount:
        type: number
        format: double
      gbpAmount:
        type: number
        format: double
      id:
        type: string
        format: uuid
      jpyAmount:
        type: number
        format: double
      litecoinAmount:
        type: number
        format: double
      moneroAmount:
        type: number
        format: double
      rippleAmount:
        type: number
        format: double
      tryAmount:
        type: number
        format: double
      usdAmount:
        type: number
        format: double
    title: UserAccountResource
